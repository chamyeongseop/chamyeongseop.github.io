<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator>
  <link href="/tag/linux/feed.xml" rel="self" type="application/atom+xml" />
  <link href="/" rel="alternate" type="text/html" />
  <updated>2019-10-24T01:42:56+00:00</updated>
  <id>/tag/linux/feed.xml</id>

  
  
  

  
    <title type="html">Akas Blog | </title>
  

  
    <subtitle>The machine learning enginner</subtitle>
  

  

  
    
      
    
      
    
  

  
  

  
    <entry>
      <title type="html">Parallel SSH</title>
      <link href="/PSSH" rel="alternate" type="text/html" title="Parallel SSH" />
      <published>2019-09-24T09:00:00+00:00</published>
      <updated>2019-09-24T09:00:00+00:00</updated>
      <id>/PSSH</id>
      <content type="html" xml:base="/PSSH">&lt;p&gt;다수의 타깃서버에 동일한 명령, 파일복제 등을 수행할때 PSSH, PSCP 등을 활용할 수 있다.&lt;/p&gt;

&lt;h2 id=&quot;명령어-설명&quot;&gt;명령어 설명&lt;/h2&gt;
&lt;p&gt;PSSH(Parallel-SSH) : 여러 대의 서버에 동일한 명령어를 반복 적용할 수 있는 명령어
PSCP(Parallel-SCP) : 여러 대의 서버에 동일한 파일을 반복하여 복사할 수 있는 명령어
Usage: pssh/pscp (options) command
Options
-i : 결과 출력
-h : 호스트 파일 불러오기
-H : 목적지 주소 기재(ip, hostname, domain 입력), 2개 이상의 서버에 명령할 경우 띄어주기로 구분&lt;/p&gt;

&lt;h2 id=&quot;pssh-예제&quot;&gt;PSSH 예제&lt;/h2&gt;
&lt;p&gt;3.1 PSSH를 활용하여, 여러 서버의 비밀번호 변경하기
타깃 서버 리스트 작성 (-h 옵션 사용시)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;동시에 명령을 수행 할 서버의 정보를 등록해준다(4가지 방식 가능)&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# ip:port 형식&lt;/span&gt;
0.0.0.1:1111
0.0.0.2:1111

&lt;span class=&quot;c&quot;&gt;# hostname:port 형식&lt;/span&gt;
hostname1:1111
hostname2:1111

&lt;span class=&quot;c&quot;&gt;# IP (사용자가 직접 SSH 서비스의 포트를 설정하면, 포트명을 생략하여 사용할 수 있다.)&lt;/span&gt;
0.0.0.1
0.0.0.2

&lt;span class=&quot;c&quot;&gt;# HostName&lt;/span&gt;
hostname1
hostname2&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;hosts에 등록 된 여러 서버의 비밀번호를 한번에 변경할 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;호스트-리스트에-작성된-타깃서버들에-동일하게-password-변경-적용&quot;&gt;호스트 리스트에 작성된 타깃서버들에 동일하게 PASSWORD 변경 적용&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;pssh &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; hosts.list &lt;span class=&quot;s2&quot;&gt;&quot;echo 'PASSWORD' | sudo passwd --stdin hdfs&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;32-pscp로-파일-배포하기&quot;&gt;3.2 PSCP로 파일 배포하기&lt;/h2&gt;
&lt;p&gt;PSCP예시 : pscp [OPTIONS] 로컬파일의위치 복제할위치
PSCP 명령어는 PSSH 명령어와는 달리, “sudo” 명령어 사용에 제약(권한 제한)이 있어 /etc/hosts로 바로 이동을 시킬 수 없어 (pscp로 복제가능한 경로인) /home/hdfs에 우선 복사한 후, 옮기는 방식을 사용한다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# 호스트 리스트에 작성된 타깃서버들에 파일복제 수행&lt;/span&gt;
pscp &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; hosts.list /etc/hosts /home/hdfs


/etc/hosts에 옮겨준다.

pssh &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; hosts.list &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;mv /home/hdfs/hosts /etc/hosts&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content>

      
      
      
      
      

      <author>
          <name>Akas</name>
        
        
      </author>

      

      
        <category term="Linux" />
      

      
        <summary type="html">다수의 타깃서버에 동일한 명령, 파일복제 등을 수행할때 PSSH, PSCP 등을 활용할 수 있다.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">/etc/hosts 설정</title>
      <link href="/Linux-hosts" rel="alternate" type="text/html" title="/etc/hosts 설정" />
      <published>2019-09-11T09:00:00+00:00</published>
      <updated>2019-09-11T09:00:00+00:00</updated>
      <id>/Linux-hosts</id>
      <content type="html" xml:base="/Linux-hosts">&lt;h1 id=&quot;호스트-파일-설정&quot;&gt;호스트 파일 설정&lt;/h1&gt;
&lt;h2 id=&quot;hosts-파일-소개&quot;&gt;hosts 파일 소개&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;/etc/hosts 파일에 리눅스 로컬네임서버 설정을 할 수 있다.&lt;/li&gt;
  &lt;li&gt;리눅스에서 hosts의 내용은 DNS(Domain Name Server)보다 먼저 탐색되어, 호스트명을 IP 주소로 풀어서 해석한다.&lt;/li&gt;
  &lt;li&gt;“NAVER” 서비스를 이용할 때, “NAVER”의 IP 주소를 입력하는 것이 아니라, 도메인명을 활용하여 서비스를 이용한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;호스트hosts-설정&quot;&gt;호스트(hosts) 설정&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;/etc/hosts 파일을 편집한다.&lt;/li&gt;
  &lt;li&gt;각 서버들의 IP 주소 및 도메인명과 Alias 등의 정보를 넣어준다.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# hosts 설정 방법&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;root@admin ~]# vi /etc/hosts
101.101.101.101 test1.도메인명.com test1 &lt;span class=&quot;c&quot;&gt;# IP주소 도메인명 Alias(도메인의 별칭) 순으로 입력&lt;/span&gt;
101.101.101.102 test2.도메인명.com test2
101.101.101.103 test3.도메인명.com test3
101.101.101.104 test4.도메인명.com test4&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# 도메인명으로 PING TEST&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;root@admin ~]# ping test1.도메인명.com
PING test1.도메인명.com &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;101.101.101.101&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 4&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;8&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; bytes of data.

&lt;span class=&quot;c&quot;&gt;# ALIAS로 PING TEST&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;root@admin ~]# ping test1
PING test1 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;101.101.101.101&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 56&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;84&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; bytes of data.&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;호스트명-변경&quot;&gt;호스트명 변경&lt;/h2&gt;
&lt;h3 id=&quot;hostnamectl-명령어를-활용하는-방법&quot;&gt;hostnamectl 명령어를 활용하는 방법&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Network hostname을 test.domainName.com으로 설정&lt;/li&gt;
  &lt;li&gt;Home 디렉토리에서 작업을 수행한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;root@admin ~]# &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;hostnamectl set-hostname test.&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# 변경 된 호스트명을 확인할 수 있다.&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;root@admin ~]# hostname&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# 출력 결과&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;root@admin ~]# test1.도메인명.com&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;shell-script를-활용하여-호스트-이름을-변경하는-방법&quot;&gt;Shell script를 활용하여, 호스트 이름을 변경하는 방법&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;bash 파일을 활용하여, 전체 서버에 명령어를 전달하려고 한다. change_hosts_name.sh 이름의 bash 파일을 생성해보자.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# bash 파일을 실행하여, 리눅스 터널링을 수행할 것이다.&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;root@admin ~]# vi change_hosts_name.sh&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;host 안에는 hostname 목록들이 존재하며, 아래의 내용을 change_hosts_name.sh 파일에 넣어줌으로써, bash 파일을 수정해준다.&lt;/li&gt;
  &lt;li&gt;내용 수정이 끝난 후에는 vi 명령어를 통해 쓰기 후 저장을 한다.(ESC키 → :wq 입력 후 엔터키로 빠져나온다.)&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;host &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;hosts&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;do
    &lt;/span&gt;ssh &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;portNumber&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;userName&quot;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'@'&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$host&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;hostnamectl set-hostname &lt;span class=&quot;nv&quot;&gt;$host&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;bash 파일을 실행해준다.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;root@admin ~]# sh ./change_hosts_name.sh&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content>

      
      
      
      
      

      <author>
          <name>Akas</name>
        
        
      </author>

      

      
        <category term="Linux" />
      

      
        <summary type="html">호스트 파일 설정 hosts 파일 소개 /etc/hosts 파일에 리눅스 로컬네임서버 설정을 할 수 있다. 리눅스에서 hosts의 내용은 DNS(Domain Name Server)보다 먼저 탐색되어, 호스트명을 IP 주소로 풀어서 해석한다. “NAVER” 서비스를 이용할 때, “NAVER”의 IP 주소를 입력하는 것이 아니라, 도메인명을 활용하여 서비스를 이용한다.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Ansible</title>
      <link href="/Ansible" rel="alternate" type="text/html" title="Ansible" />
      <published>2019-08-02T10:18:00+00:00</published>
      <updated>2019-08-02T10:18:00+00:00</updated>
      <id>/Ansible</id>
      <content type="html" xml:base="/Ansible">&lt;h2 id=&quot;ansible&quot;&gt;Ansible&lt;/h2&gt;
&lt;p&gt;많은 서버들에 동시에 동일한 환경을 배포해야하는 상황에 사용됨.&lt;/p&gt;

&lt;p&gt;Python 기반의 오픈 소스&lt;/p&gt;

&lt;p&gt;멱등성(Idempotency) - 여러번 적용해도 결과는 바뀌지 않음.&lt;/p&gt;

&lt;p&gt;Orchestration.&lt;/p&gt;

&lt;p&gt;불특정하게 서버를 등록할 때, 기능별로…환경별로 사용됨.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Ghost</name>
        
        
      </author>

      

      
        <category term="Linux" />
      

      
        <summary type="html">Ansible 많은 서버들에 동시에 동일한 환경을 배포해야하는 상황에 사용됨.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">호스트(host) 파일 설정</title>
      <link href="/Set-Host_txt" rel="alternate" type="text/html" title="호스트(host) 파일 설정" />
      <published>2019-07-25T10:18:00+00:00</published>
      <updated>2019-07-25T10:18:00+00:00</updated>
      <id>/Set%20Host_txt</id>
      <content type="html" xml:base="/Set-Host_txt">&lt;h2 id=&quot;hosts-파일-소개&quot;&gt;hosts 파일 소개&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;CentOS 7에서 DNS(Domain Name Server)보다 먼저 IP주소와 Hostname 또는 Domain 명을 Mapping하는 역할을 한다.&lt;/li&gt;
  &lt;li&gt;작은 네트워크에서는 DNS를 대신하도록 설정할 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;hosts-설정&quot;&gt;hosts 설정&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Home 디렉토리에서 작업&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;vi /etc/hosts&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content>

      
      
      
      
      

      <author>
          <name>Akas</name>
        
        
      </author>

      

      
        <category term="Linux" />
      

      
        <summary type="html">hosts 파일 소개 CentOS 7에서 DNS(Domain Name Server)보다 먼저 IP주소와 Hostname 또는 Domain 명을 Mapping하는 역할을 한다. 작은 네트워크에서는 DNS를 대신하도록 설정할 수 있다.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">CentOS 환경에서 포트없이 사용하기.</title>
      <link href="/Linux-Port%EC%97%86%EC%9D%B4-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0" rel="alternate" type="text/html" title="CentOS 환경에서 포트없이 사용하기." />
      <published>2019-07-24T15:00:00+00:00</published>
      <updated>2019-07-24T15:00:00+00:00</updated>
      <id>/Linux%20Port%EC%97%86%EC%9D%B4%20%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0</id>
      <content type="html" xml:base="/Linux-Port%EC%97%86%EC%9D%B4-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0">&lt;p&gt;Port 번호를 생략하여, Linux 명령어를 사용하는 방법을 다룰 것이다.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Ghost</name>
        
        
      </author>

      

      
        <category term="Linux" />
      

      
        <summary type="html">Port 번호를 생략하여, Linux 명령어를 사용하는 방법을 다룰 것이다.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Jekyll Blog 개설</title>
      <link href="/Blog-%EA%B0%9C%EC%84%A4" rel="alternate" type="text/html" title="Jekyll Blog 개설" />
      <published>2019-07-22T05:00:00+00:00</published>
      <updated>2019-07-22T05:00:00+00:00</updated>
      <id>/Blog%20%EA%B0%9C%EC%84%A4</id>
      <content type="html" xml:base="/Blog-%EA%B0%9C%EC%84%A4">&lt;p&gt;블로그를 개설하였다.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Ghost</name>
        
        
      </author>

      

      
        <category term="Linux" />
      

      
        <summary type="html">블로그를 개설하였다.</summary>
      

      
      
    </entry>
  
</feed>
